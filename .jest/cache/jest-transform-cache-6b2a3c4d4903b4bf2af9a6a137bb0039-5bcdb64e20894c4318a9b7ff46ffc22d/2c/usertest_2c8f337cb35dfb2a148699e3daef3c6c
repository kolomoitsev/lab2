6bec14cb965242aeac89ef713c95d49e
"use strict";

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const jest_mock_extended_1 = require("jest-mock-extended");

const user_controller_1 = require("../controllers/user.controller");

const mongoose = require('mongoose');

jest.setTimeout(30000);
describe('Testing user controller', () => {
  test('testing finding user', done => __awaiter(void 0, void 0, void 0, function* () {
    const userController = new user_controller_1.UserController();
    const user = (0, jest_mock_extended_1.mock)();
    const pavlo = yield userController.findUser('pavlo.kolomoitsev@nure.ua');
    expect(pavlo).toBeInstanceOf(user);
    mongoose.disconnect();
    mongoose.connection.once('close');
    done();
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0cy91c2VyLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxNQUFBLG9CQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBQ0EsTUFBQSxpQkFBQSxHQUFBLE9BQUEsQ0FBQSxnQ0FBQSxDQUFBOztBQUVBLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQUksQ0FBQyxVQUFMLENBQWdCLEtBQWhCO0FBRUEsUUFBUSxDQUFDLHlCQUFELEVBQTRCLE1BQUs7QUFDckMsRUFBQSxJQUFJLENBQUMsc0JBQUQsRUFBZ0MsSUFBUCxJQUFlLFNBQUEsQ0FBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsRUFBQSxhQUFBO0FBQ3hDLFVBQU0sY0FBYyxHQUFHLElBQUksaUJBQUEsQ0FBQSxjQUFKLEVBQXZCO0FBQ0EsVUFBTSxJQUFJLEdBQUcsQ0FBQSxHQUFBLG9CQUFBLENBQUEsSUFBQSxHQUFiO0FBQ0EsVUFBTSxLQUFLLEdBQUcsTUFBTSxjQUFjLENBQUMsUUFBZixDQUF3QiwyQkFBeEIsQ0FBcEI7QUFDQSxJQUFBLE1BQU0sQ0FBQyxLQUFELENBQU4sQ0FBYyxjQUFkLENBQTZCLElBQTdCO0FBQ0EsSUFBQSxRQUFRLENBQUMsVUFBVDtBQUNBLElBQUEsUUFBUSxDQUFDLFVBQVQsQ0FBb0IsSUFBcEIsQ0FBeUIsT0FBekI7QUFDQSxJQUFBLElBQUk7QUFDUCxHQVIyQyxDQUF4QyxDQUFKO0FBU0gsQ0FWTyxDQUFSIiwic291cmNlUm9vdCI6IiJ9